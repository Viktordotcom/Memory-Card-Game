{"version":3,"sources":["components/Header.js","components/CardContainer.js","components/Card.js","App.js","index.js"],"names":["Header","score","highScore","CardContainer","children","handleClick","className","onClick","Card","src","id","e","alt","App","useImmer","cardDeck","setCardDeck","useState","randomNumber","setRandomNumber","isClicked","setIsClicked","setScore","setHighScore","change","setChange","useEffect","a","fetch","cardData","json","Math","floor","random","data","length","draft","splice","slicedArray","map","item","clicks","push","console","error","getData","isMistake","some","card","noMistake","every","log","Number","target","array","i","j","temp","shuffleArray","card_images","image_url","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fd9bb79.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles/Header.css\";\n\nexport default function Header({ score, highScore }) {\n  return (\n    <div>\n      <h2>Score: {score}</h2>\n      <h2>HighScore: {highScore}</h2>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./styles/CardContainer.css\";\nexport default function CardContainer({ children, handleClick }) {\n  return (\n    <div className=\"card-container\" onClick={handleClick}>\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./styles/Card.css\";\n\nexport default function Card({ src, onClick, id }) {\n  return (\n    <div>\n      <img id={id} onClick={(e) => onClick(e)} src={src} alt=\"\" />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useImmer } from \"use-immer\";\nimport Header from \"./components/Header\";\nimport CardContainer from \"./components/CardContainer\";\nimport Card from \"./components/Card\";\nimport \"./components/styles/App.css\";\n\nfunction App() {\n  const [cardDeck, setCardDeck] = useImmer([[]]);\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [isClicked, setIsClicked] = useState(false);\n  const [score, setScore] = useState(-1);\n  const [highScore, setHighScore] = useState(0);\n  const [change, setChange] = useState(false);\n\n  const shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        const cardData = await fetch(\n          \"https://db.ygoprodeck.com/api/v7/cardinfo.php\"\n        );\n        const json = await cardData.json();\n\n        setRandomNumber(Math.floor(Math.random() * json.data.length));\n        setCardDeck((draft) => {\n          draft.splice(0, 1);\n\n          const slicedArray = json.data.splice(randomNumber, 6);\n          slicedArray.map((item) => {\n            item.clicks = 0;\n            return {\n              ...item,\n              clicks: 0,\n            };\n          });\n          draft.push(slicedArray);\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    getData();\n  }, [change]);\n\n  useEffect(() => {\n    const isMistake = cardDeck[0].some((card) => card.clicks > 1);\n    const noMistake = cardDeck[0].every((card) => card.clicks === 1);\n    !isMistake && setScore(score + 1);\n    isMistake && setScore(0);\n    score > highScore && setHighScore(highScore + 1);\n\n    isMistake || noMistake ? setChange(!change) : console.log(\"No change\");\n  }, [isClicked]);\n\n  const handleClick = (e) => {\n    setCardDeck((draft) => {\n      draft[0].map((card) => {\n        if (Number(e.target.id) === card.id) {\n          card.clicks += 1;\n          return {\n            ...card,\n            clicks: card.clicks + 1,\n          };\n        }\n        return card;\n      });\n    });\n    setCardDeck((draft) => {\n      shuffleArray(draft[0]);\n    });\n    setIsClicked(!isClicked);\n  };\n  return (\n    <div className=\"App\">\n      <Header score={score} highScore={highScore} />\n      <CardContainer>\n        {cardDeck.length > 0 &&\n          cardDeck[0].map((card) => (\n            <Card\n              key={card.id}\n              id={card.id}\n              onClick={handleClick}\n              src={card.card_images[0].image_url}\n            />\n          ))}\n      </CardContainer>\n      <div className=\"footer\">\n        Instructions: Don't click the same card twice!\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./components/styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}